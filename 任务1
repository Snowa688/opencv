import cv2
import numpy as np
def cv_show(name,img):
	cv2.imshow(name, img)
	cv2.waitKey(0)
	cv2.destroyAllWindows()
def transform(image):
	cv_show('img', image)
	gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
	blurred_image = cv2.GaussianBlur(gray, (5, 5), 0)
	ref = cv2.threshold(blurred_image, 200, 255, cv2.THRESH_BINARY)[1]
	cnts, h = cv2.findContours(ref.copy(), cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)
	internal_contours = []
	ex_point = []
	for i, contour in enumerate(cnts):
		current_hierarchy = h[0][i]
		area = cv2.contourArea(contour)
		if current_hierarchy[3] != -1 and area > 400:
			internal_contours.append(contour)
	for i in internal_contours:
		epsilon = 0.1 * cv2.arcLength(i, True)
		approx = cv2.approxPolyDP(i, epsilon, True)
		for i in range(int(len(approx) / 3)):
			start_index = i * 3
			end_index = start_index + 3
			ex_point = approx[start_index:end_index]
			ex_point_f = np.float32(ex_point)
			pts = np.float32([[435, 350], [435, 500], [300, 500]])
			M = cv2.getAffineTransform(ex_point_f, pts)
			result = cv2.warpAffine(image, M, (800, 800))
			cv_show('1', result)

file_path1 = "C:\\Users\\20629\\file\\1.jpg"
file_path2 = "C:\\Users\\20629\\file\\2.jpg"
file_path3 = "C:\\Users\\20629\\file\\3.jpg"
file_path4 = "C:\\Users\\20629\\file\\4.jpg"
file_path5 = "C:\\Users\\20629\\file\\5.jpg"
image1 = cv2.imread(file_path1)
image2 = cv2.imread(file_path2)
image3 = cv2.imread(file_path3)
image4 = cv2.imread(file_path4)
image5 = cv2.imread(file_path5)
transform(image1)
transform(image2)
transform(image3)
transform(image4)
transform(image5)
